{"version":3,"file":"react-rating.umd.min.js","sources":["../src/utils/style.js","../src/RatingSymbol.js","../src/Rating.js","../src/utils/noop.js","../src/RatingAPILayer.js"],"sourcesContent":["var style = {\n  display: 'inline-block',\n  borderRadius: '50%',\n  border: '5px double white',\n  width: 30,\n  height: 30\n};\n\nexport default {\n  empty: {\n    ...style,\n    backgroundColor: '#ccc'\n  },\n  full: {\n    ...style,\n    backgroundColor: 'black'\n  },\n  placeholder: {\n    ...style,\n    backgroundColor: 'red'\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Return the corresponding React node for an icon.\nconst _iconNode = (icon) => {\n  // If it is already a React Element just return it.\n  if (React.isValidElement(icon)) {\n    return icon;\n  }\n  // If it is an object, try to use it as a CSS style object.\n  if (typeof icon === 'object' && icon !== null) {\n    return <span style={icon} />;\n  }\n  // If it is a string, use it as class names.\n  if (Object.prototype.toString.call(icon) === '[object String]') {\n    return <span className={icon} />;\n  }\n};\n\nclass RatingSymbol extends React.PureComponent {\n  render() {\n    const {\n      index,\n      inactiveIcon,\n      activeIcon,\n      percent,\n      direction,\n      readonly,\n      onClick,\n      onMouseMove,\n      onTouchEnd\n    } = this.props;\n    const backgroundNode = _iconNode(inactiveIcon);\n    const showbgIcon = percent < 100;\n    const bgIconContainerStyle = showbgIcon\n      ? {}\n      : {\n          visibility: 'hidden'\n        };\n    const iconNode = _iconNode(activeIcon);\n    const iconContainerStyle = {\n      display: 'inline-block',\n      position: 'absolute',\n      overflow: 'hidden',\n      top: 0,\n      [direction === 'rtl' ? 'right' : 'left']: 0,\n      width: `${percent}%`\n    };\n    const style = {\n      cursor: !readonly ? 'pointer' : 'inherit',\n      display: 'inline-block',\n      position: 'relative'\n    };\n\n    function handleMouseMove(e) {\n      if (onMouseMove) {\n        onMouseMove(index, e);\n      }\n    }\n\n    function handleMouseClick(e) {\n      if (onClick) {\n        // [Supporting both TouchEvent and MouseEvent](https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Supporting_both_TouchEvent_and_MouseEvent)\n        // We must prevent firing click event twice on touch devices.\n        e.preventDefault();\n        onClick(index, e);\n      }\n    }\n\n    function handleTouchEnd(e) {\n      if (onTouchEnd) {\n        onTouchEnd(index, e);\n      }\n    }\n\n    return (\n      <span\n        style={style}\n        onClick={handleMouseClick}\n        onMouseMove={handleMouseMove}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleTouchEnd}\n      >\n        <span style={bgIconContainerStyle}>\n          {backgroundNode}\n        </span>\n        <span style={iconContainerStyle}>\n          {iconNode}\n        </span>\n      </span>\n    );\n  }\n}\n\n// Define propTypes only in development. They will be void in production.\nRatingSymbol.propTypes = typeof __DEV__ !== 'undefined' && __DEV__ && {\n  index: PropTypes.number.isRequired,\n  readonly: PropTypes.bool.isRequired,\n  inactiveIcon: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.element\n  ]).isRequired,\n  activeIcon: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.element\n  ]).isRequired,\n  percent: PropTypes.number.isRequired,\n  direction: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\n\nexport default RatingSymbol;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Symbol from './RatingSymbol';\n\nclass Rating extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Indicates the value that is displayed to the user in the form of symbols.\n      // It can be either 0 (for no displayed symbols) or (0, end]\n      displayValue: this.props.value,\n      // Indicates if the user is currently hovering over the rating element\n      interacting: false\n    };\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.symbolMouseMove = this.symbolMouseMove.bind(this);\n    this.symbolClick = this.symbolClick.bind(this);\n    this.symbolEnd = this.symbolEnd.bind(this);\n  }\n\n  // NOTE: This callback is a little bit fragile. Needs some \"care\" because\n  // it relies on brittle state kept with different props and state\n  // combinations to try to figure out from where we are coming, I mean, what\n  // caused this update.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.value !== prevProps.value) {\n      this.setState({\n        displayValue: this.props.value !== prevProps.value ? this.props.value : prevState.displayValue\n      });\n    }\n\n    // When hover ends, call this.props.onHover with no value.\n    if (prevState.interacting && !this.state.interacting) {\n      return this.props.onHover();\n    }\n\n    // When hover over.\n    // Hover in should only be emitted while we are hovering (interacting),\n    // unless we changed the value, usually originated by an onClick event.\n    // We do not want to emit a hover in event again on the clicked\n    // symbol.\n    if (this.state.interacting && prevProps.value == this.props.value) {\n      this.props.onHover(this.state.displayValue);\n    }\n  }\n\n  symbolEnd(symbolIndex, event) {\n    // Do not raise the click event on quiet mode when a touch end is received.\n    // On quiet mode the touch end event only notifies that we have left the\n    // symbol. We wait for the actual click event to call the symbolClick.\n    // On not quiet mode we simulate the click event on touch end and we just\n    // prevent the real on click event to be raised.\n    // NOTE: I know how we manage click events on touch devices is a little bit\n    // weird because we do not notify the starting value that was clicked but\n    // the last (touched) value.\n    if (!this.props.quiet) {\n      this.symbolClick(symbolIndex, event);\n      event.preventDefault();\n    }\n    // On touch end we are \"leaving\" the symbol.\n    this.onMouseLeave();\n  }\n\n  symbolClick(symbolIndex, event) {\n    const value = this.calculateDisplayValue(symbolIndex, event);\n    this.props.onClick(value, event);\n  }\n\n  symbolMouseMove(symbolIndex, event) {\n    const value = this.calculateDisplayValue(symbolIndex, event);\n    // This call should cause an update only if the state changes.\n    // Mainly the first time the mouse enters and whenever the value changes.\n    // So DidComponentUpdate is NOT called for every mouse movement.\n    this.setState({\n      interacting: !this.props.readonly,\n      displayValue: value\n    });\n  }\n\n  onMouseLeave() {\n    this.setState({\n      displayValue: this.props.value,\n      interacting: false\n    });\n  }\n\n  calculateDisplayValue(symbolIndex, event) {\n    const percentage = this.calculateHoverPercentage(event);\n    // Get the closest top fraction.\n    const fraction = Math.ceil(percentage % 1 * this.props.fractions) / this.props.fractions;\n    // Truncate decimal trying to avoid float precission issues.\n    const precision = 10 ** 3;\n    const displayValue =\n      symbolIndex + (Math.floor(percentage) + Math.floor(fraction * precision) / precision);\n    // ensure the returned value is greater than 0 and lower than totalSymbols\n    return displayValue > 0 ? displayValue > this.props.totalSymbols ? this.props.totalSymbols : displayValue : 1 / this.props.fractions;\n  }\n\n  calculateHoverPercentage(event) {\n    const clientX = event.nativeEvent.type.indexOf(\"touch\") > -1\n      ? event.nativeEvent.type.indexOf(\"touchend\") > -1\n        ? event.changedTouches[0].clientX\n        : event.touches[0].clientX\n      : event.clientX;\n\n    const targetRect = event.target.getBoundingClientRect();\n    const delta = this.props.direction === 'rtl'\n      ? targetRect.right - clientX\n      : clientX - targetRect.left;\n\n    // Returning 0 if the delta is negative solves the flickering issue\n    return delta < 0 ? 0 : delta / targetRect.width;\n  }\n\n  render() {\n    const {\n      readonly,\n      quiet,\n      totalSymbols,\n      value,\n      placeholderValue,\n      direction,\n      emptySymbol,\n      fullSymbol,\n      placeholderSymbol,\n      className,\n      id,\n      style,\n      tabIndex\n    } = this.props;\n    const { displayValue, interacting } = this.state;\n    const symbolNodes = [];\n    const empty = [].concat(emptySymbol);\n    const full = [].concat(fullSymbol);\n    const placeholder = [].concat(placeholderSymbol);\n    const shouldDisplayPlaceholder =\n      placeholderValue !== 0 &&\n      value === 0 &&\n      !interacting;\n\n    // The value that will be used as base for calculating how to render the symbols\n    let renderedValue;\n    if (shouldDisplayPlaceholder) {\n      renderedValue = placeholderValue;\n    } else {\n      renderedValue = quiet ? value : displayValue;\n    }\n\n    // The amount of full symbols\n    const fullSymbols = Math.floor(renderedValue);\n\n    for (let i = 0; i < totalSymbols; i++) {\n      let percent;\n      // Calculate each symbol's fullness percentage\n      if (i - fullSymbols < 0) {\n        percent = 100;\n      } else if (i - fullSymbols === 0) {\n        percent = (renderedValue - i) * 100;\n      } else {\n        percent = 0;\n      }\n\n      symbolNodes.push(\n        <Symbol\n          key={i}\n          index={i}\n          readonly={readonly}\n          inactiveIcon={empty[i % empty.length]}\n          activeIcon={\n            shouldDisplayPlaceholder ? placeholder[i % full.length] : full[i % full.length]\n          }\n          percent={percent}\n          direction={direction}\n          {...(!readonly && {\n            onClick: this.symbolClick,\n            onMouseMove: this.symbolMouseMove,\n            onTouchMove: this.symbolMouseMove,\n            onTouchEnd: this.symbolEnd\n          })}\n        />\n      );\n    }\n\n    return (\n      <span\n        id={id}\n        style={{...style, display: 'inline-block', direction }}\n        className={className}\n        tabIndex={tabIndex}\n        aria-label={this.props['aria-label']}\n        {...(!readonly && {\n          onMouseLeave: this.onMouseLeave\n        })}\n      >\n        {symbolNodes}\n      </span>\n    );\n  }\n}\n\n// Define propTypes only in development.\nRating.propTypes = typeof __DEV__ !== 'undefined' && __DEV__ && {\n  totalSymbols: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired, // Always >= 0\n  placeholderValue: PropTypes.number.isRequired,\n  readonly: PropTypes.bool.isRequired,\n  quiet: PropTypes.bool.isRequired,\n  fractions: PropTypes.number.isRequired,\n  direction: PropTypes.string.isRequired,\n  emptySymbol: PropTypes.oneOfType([\n    // Array of class names and/or style objects.\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\n    // Class names.\n    PropTypes.string,\n    // Style objects.\n    PropTypes.object,\n    // React element\n    PropTypes.element\n  ]).isRequired,\n  fullSymbol: PropTypes.oneOfType([\n    // Array of class names and/or style objects.\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\n    // Class names.\n    PropTypes.string,\n    // Style objects.\n    PropTypes.object,\n    // React element\n    PropTypes.element\n  ]).isRequired,\n  placeholderSymbol: PropTypes.oneOfType([\n    // Array of class names and/or style objects.\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\n    // Class names.\n    PropTypes.string,\n    // Style objects.\n    PropTypes.object,\n    // React element\n    PropTypes.element\n  ]),\n  onClick: PropTypes.func.isRequired,\n  onHover: PropTypes.func.isRequired\n};\n\nexport default Rating;\n","function noop() {}\nnoop._name = 'react_rating_noop';\n\nexport default noop;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Style from './utils/style';\nimport Rating from './Rating';\nimport noop from './utils/noop';\n\nclass RatingAPILayer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.initialRating\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleHover = this.handleHover.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.initialRating\n    });\n  }\n\n  handleClick(value, e) {\n    const newValue = this.translateDisplayValueToValue(value);\n    this.props.onClick(newValue);\n    // Avoid calling setState if not necessary. Micro optimisation.\n    if (this.state.value !== newValue) {\n      // If we have a new value trigger onChange callback.\n      this.setState({\n        value: newValue\n      }, () => this.props.onChange(this.state.value));\n    }\n  }\n\n  handleHover(displayValue) {\n    const value = displayValue === undefined\n      ? displayValue\n      : this.translateDisplayValueToValue(displayValue);\n    this.props.onHover(value);\n  }\n\n  translateDisplayValueToValue(displayValue) {\n    const translatedValue = displayValue * this.props.step + this.props.start;\n    // minimum value cannot be equal to start, since it's exclusive\n    return translatedValue === this.props.start\n      ? translatedValue + 1 / this.props.fractions\n      : translatedValue;\n  }\n\n  tranlateValueToDisplayValue(value) {\n    if (value === undefined) {\n      return 0;\n    }\n    return (value - this.props.start) / this.props.step;\n  }\n\n  render() {\n    const {\n      step,\n      emptySymbol,\n      fullSymbol,\n      placeholderSymbol,\n      readonly,\n      quiet,\n      fractions,\n      direction,\n      start,\n      stop,\n      id,\n      className,\n      style,\n      tabIndex\n    } = this.props;\n\n    function calculateTotalSymbols(start, stop, step) {\n      return Math.floor((stop - start) / step);\n    }\n\n    return (\n      <Rating\n        id={id}\n        style={style}\n        className={className}\n        tabIndex={tabIndex}\n        aria-label={this.props['aria-label']}\n        totalSymbols={calculateTotalSymbols(start, stop, step)}\n        value={this.tranlateValueToDisplayValue(this.state.value)}\n        placeholderValue={this.tranlateValueToDisplayValue(this.props.placeholderRating)}\n        readonly={readonly}\n        quiet={quiet}\n        fractions={fractions}\n        direction={direction}\n        emptySymbol={emptySymbol}\n        fullSymbol={fullSymbol}\n        placeholderSymbol={placeholderSymbol}\n        onClick={this.handleClick}\n        onHover={this.handleHover}\n      />\n    );\n  }\n}\n\nRatingAPILayer.defaultProps = {\n  start: 0,\n  stop: 5,\n  step: 1,\n  readonly: false,\n  quiet: false,\n  fractions: 1,\n  direction: 'ltr',\n  onHover: noop,\n  onClick: noop,\n  onChange: noop,\n  emptySymbol: Style.empty,\n  fullSymbol: Style.full,\n  placeholderSymbol: Style.placeholder\n};\n\n// Define propTypes only in development.\nRatingAPILayer.propTypes = typeof __DEV__ !== 'undefined' && __DEV__ && {\n  start: PropTypes.number,\n  stop: PropTypes.number,\n  step: PropTypes.number,\n  initialRating: PropTypes.number,\n  placeholderRating: PropTypes.number,\n  readonly: PropTypes.bool,\n  quiet: PropTypes.bool,\n  fractions: PropTypes.number,\n  direction: PropTypes.string,\n  emptySymbol: PropTypes.oneOfType([\n    // Array of class names and/or style objects.\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\n    // Class names.\n    PropTypes.string,\n    // Style objects.\n    PropTypes.object,\n    // React element\n    PropTypes.element\n  ]),\n  fullSymbol: PropTypes.oneOfType([\n    // Array of class names and/or style objects.\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\n    // Class names.\n    PropTypes.string,\n    // Style objects.\n    PropTypes.object,\n    // React element\n    PropTypes.element\n  ]),\n  placeholderSymbol: PropTypes.oneOfType([\n    // Array of class names and/or style objects.\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.element])),\n    // Class names.\n    PropTypes.string,\n    // Style objects.\n    PropTypes.object,\n    // React element\n    PropTypes.element\n  ]),\n  onHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onChange: PropTypes.func\n};\n\nexport default RatingAPILayer;\n"],"names":["style","display","borderRadius","border","width","height","empty","_objectSpread","backgroundColor","full","placeholder","_iconNode","icon","React","isValidElement","_typeof","createElement","Object","prototype","toString","call","className","RatingSymbol","_React$PureComponent","_inherits","PureComponent","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_iconContainerStyle","_this$props","this","props","index","inactiveIcon","activeIcon","percent","direction","readonly","onClick","onMouseMove","onTouchEnd","backgroundNode","bgIconContainerStyle","visibility","iconNode","iconContainerStyle","_defineProperty","position","overflow","top","concat","cursor","handleMouseMove","e","preventDefault","onTouchMove","Rating","_this","state","displayValue","interacting","onMouseLeave","bind","_assertThisInitialized","symbolMouseMove","symbolClick","symbolEnd","prevProps","prevState","setState","onHover","symbolIndex","event","quiet","calculateDisplayValue","percentage","calculateHoverPercentage","fraction","Math","ceil","fractions","precision","pow","floor","totalSymbols","clientX","nativeEvent","type","indexOf","changedTouches","touches","targetRect","target","getBoundingClientRect","delta","right","left","renderedValue","placeholderValue","emptySymbol","fullSymbol","placeholderSymbol","id","tabIndex","_this$state","symbolNodes","shouldDisplayPlaceholder","fullSymbols","i","push","_Symbol","_extends","length","aria-label","noop","_name","RatingAPILayer","initialRating","handleClick","handleHover","nextProps","_this2","newValue","translateDisplayValueToValue","onChange","undefined","translatedValue","step","start","stop","calculateTotalSymbols","tranlateValueToDisplayValue","placeholderRating","defaultProps","Style"],"mappings":"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"}